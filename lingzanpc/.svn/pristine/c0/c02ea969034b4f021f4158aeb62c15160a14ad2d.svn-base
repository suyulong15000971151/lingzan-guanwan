<?php
defined('BASEPATH') OR exit('No direct script access allowed');

class Library extends MY_controller {

	public function __construct() {
		$this->_class = 'library';
		parent::__construct();

		$this->load->model('library_model');
	}

	/**
	 * 材思库列表页
	 */
	public function index() {

		$p = 0;
		$type = (int) $this->input->get('type');
		$seachWord = $this->input->get('seachWord');
		$data = $this->library_model->get_recommend($p, $type, $seachWord);
		$myInfo['userid'] = $this->user->userid;
		$p++;

		$this->assign('p', $p);
		$this->assign('type', $type);
		$this->assign('seachWord', $seachWord);
		$this->assign('data', $data);
		$this->assign('myInfo', $myInfo);
		$this->display('library/library.index.html');

	}

	/**
	 * 材思库（项目）详情
	 */
	public function project() {

		$proid = (int)$this->uri->segment(3) ? $this->uri->segment(3) : redirect('/home');

		// 项目详情
		$project = $this->library_model->get_project($proid);
		$cover = explode(',', $project['cover']);

		// 产品清单
		$prolist = $this->library_model->get_prolist($proid);

		// 项目区域
		$proarea = $this->library_model->get_proarea($project['libid']);

		// 订单记录
		$order = $this->library_model->get_project_product_order_datas($proid);

		// 总计
		$total = array('numb' => 0, 'count' => 0, 'price1' => 0, 'price2' => 0);
		foreach ($prolist as $key => $value) {

			$total['numb'] += (int)$value['sp1'];
			$total['count'] += $value['sp1']['count'];
			$total['price1'] += $value['sp1']['totalprice1'];
			$total['price2'] += $value['sp1']['totalprice2'];

		}

		// 用户在项目中的权限
		$group = $this->library_model->get_user_group($proid, $this->user->userid);
		$permissions = array();
		if(!empty($group)) $permissions = explode(',', $group['permissions']);


		// 评论留言
		$comment = $this->library_model->get_comment(2, $proid);
		$commentall = $this->library_model->get_comment_all(2, $proid);
		$userInfo = $this->library_model->getOneData('lz_user', 'groupid', array('userid'=>$this->user->userid));

		// 获取项目文档
		$project_doc = $this->library_model->get_project_doc($proid);

		$this->assign('project', $project);
		$this->assign('cover', $cover);
		$this->assign('prolist', $prolist);
		$this->assign('proarea', $proarea);
		$this->assign('order', $order);
		$this->assign('total', $total);
		$this->assign('permissions', $permissions);
		$this->assign('comment', $comment);
		$this->assign('commentall', $commentall);
		$this->assign('userInfo', $userInfo);
		$this->assign('project_doc', $project_doc);

		if($group == 0) {

			// 获取项目成员
			$project_member = $this->library_model->get_project_member($proid);

			$this->assign('project_member', $project_member);
			$this->display('library/library.project.new.10.html');

		} else {

			// 获取项目成员
			$project_member = $this->library_model->get_project_member($proid);
			// 获取我的好友
			$friend = $this->library_model->get_friend($project['userid']);

			// 邀请注册链接
			$proiden = $this->library_model->encode($proid);
			$invite_url = $this->config->item('base_url')."/login/invite?proid={$proiden}";

			$this->assign('userid', $this->user->userid);
			$this->assign('avatar', $this->user->avatar);
			$this->assign('friend', $friend);
			$this->assign('project_member', $project_member);
			$this->assign('project_group', $this->config->item('project_group'));
			$this->assign('project_product_status', $this->config->item('project_product_status'));
			$this->assign('invite_url', $invite_url);

			//$this->display('library/library.project.new.1.html');
			$this->display('library/library.project.new.11.html');

		}

	}

	public function project_order() {

		$proid = (int)$this->uri->segment(3) ? $this->uri->segment(3) : redirect('/home');
		$type = $this->uri->segment(4);

		if($type == 'set') {

			$desc = urldecode($this->uri->segment(5));

			// 生成订单编号
			$yCode = array('A', 'B', 'C', 'D', 'E', 'F', 'G', 'H', 'I', 'J');
			$orderSn = $yCode[intval(date('Y')) - 2011] . strtoupper(dechex(date('m'))) . date('d') . substr(time(), -5) . substr(microtime(), 2, 5) . sprintf('%02d', rand(0, 99));

			// 项目详情
			$project = $this->library_model->get_project($proid);

			// 产品清单
			$prolist = $this->library_model->get_project_product_checkorder($proid);

			foreach ($prolist as $key => $value) {

				$data = array('orderid' => $orderSn, 'ordername' => $project['area'].$project['proname'], 'orderuserid' => $this->user->userid, 'desc' => $desc, 'addtime' => date('Y-m-d H:i:s'));
				$data = array_merge($data, $value);

				$this->library_model->set_project_product_order($data);


			}

			redirect("/library/project_order/{$proid}/{$orderSn}");

		} else {

			// 项目详情
			$project = $this->library_model->get_project($proid);

			// 订单详情
			$order = $this->library_model->get_project_product_order_data($proid, $type);

			$list = $this->library_model->get_project_product_order_list($proid, $type);

			$totalprice = 0;
			foreach ($list as $key => $value) {

				$totalprice += $value['realprice'] * $value['count'];

			}

			$this->assign('project', $project);
			$this->assign('order', $order);
			$this->assign('list', $list);
			$this->assign('totalprice', $totalprice);
			$this->display('library/library.project.order.html');

		}

	}

	/**
	 * 材思库（项目）详情（旧）
	 */
	public function project1() {

		$proid = (int)$this->uri->segment(3) ? $this->uri->segment(3) : redirect('/home');

		// 项目详情
		$project = $this->library_model->get_project($proid);

		// 产品清单
		$prolist = $this->library_model->get_prolist($proid);

		// 项目区域
		$proarea = $this->library_model->get_proarea($project['libid']);

		// 总计
		$total = array('numb' => 0, 'count' => 0, 'price' => 0);
		foreach ($prolist as $key => $value) {

			$total['numb'] += (int)$value['sp1'];
			$total['count'] += $value['sp1']['count'];
			$total['price'] += $value['sp1']['price'];

		}

		// 用户在项目中的权限
		$group = $this->library_model->get_user_group1($proid, $this->user->userid);

		// 评论留言
		$comment = $this->library_model->get_comment(2, $proid);
		$commentall = $this->library_model->get_comment_all(2, $proid);
		$userInfo = $this->library_model->getOneData('lz_user', 'groupid', array('userid'=>$this->user->userid));

		// 获取项目文档
		$project_doc = $this->library_model->get_project_doc($proid);

		$this->assign('project', $project);
		$this->assign('prolist', $prolist);
		$this->assign('proarea', $proarea);
		$this->assign('total', $total);
		$this->assign('comment', $comment);
		$this->assign('commentall', $commentall);
		$this->assign('userInfo', $userInfo);
		$this->assign('project_doc', $project_doc);

		if($group == 0) {

			$this->display('library/library.project.0.html');

		} elseif($group == 10) {

			// 获取项目成员
			$project_member = $this->library_model->get_project_member($proid);

			// 获取我的好友
			$friend = $this->library_model->get_friend($project['userid']);

			// 邀请注册链接
			$proiden = $this->library_model->encode($proid);
			$invite_url = $this->config->item('base_url')."/login/invite?proid={$proiden}";

			$this->assign('userid', $this->user->userid);
			$this->assign('avatar', $this->user->avatar);
			$this->assign('friend', $friend);
			$this->assign('project_member', $project_member);
			$this->assign('project_group', $this->config->item('project_group'));
			$this->assign('project_product_status', $this->config->item('project_product_status'));
			$this->assign('invite_url', $invite_url);
			$this->display('library/library.project.11.html');

		} elseif($group == 30) {

			// 获取项目成员
			$project_member = $this->library_model->get_project_member($proid);

			// 邀请注册链接
			$proiden = $this->library_model->encode($proid);
			$invite_url = $this->config->item('base_url')."/login/invite?proid={$proiden}";

			$this->assign('project_member', $project_member);
			$this->assign('project_group', $this->config->item('project_group'));
			$this->assign('invite_url', $invite_url);
			$this->assign('userid', $this->user->userid);
			$this->display('library/library.project.31.html');

		}

	}

	/**
	 * 快速添加成员
	 */
	public function project_member_add() {

		$error_msg = "";

		if($this->input->post('frames') == 'yes') {

			$proid = $this->input->post('proid', true);

			$this->form_validation->set_rules('nickname', '姓名', 'trim|required');
			$this->form_validation->set_rules('mobile', '手机号', 'trim|required');
			$this->form_validation->set_rules('password', '默认密码', 'trim|required');
//			$this->form_validation->set_rules('group', '项目角色', 'trim|required');
//			$this->form_validation->set_rules('company', '所属公司', 'trim|required');

			if ($this->form_validation->run() === false) {

				$error_msg = validation_errors();
				goto end;

			}

			$nickname = $this->input->post('nickname', true);
			$mobile = $this->input->post('mobile', true);
			$password = $this->input->post('password', true);
			//$group = $this->input->post('group', true);
			$group = 30;
			$company = $this->input->post('company', true);

			$check = $this->user_model->get_user(array('mobile' => $mobile));
			if(!empty($check)) {

				$error_msg = "该手机号已被注册.";
				goto end;

			}

			$password = md5(md5($password.'lingzan2017'));

			// 添加到用户表
			$user_default = $this->config->item('user_default');
			$data = array( 'mobile' => $mobile, 'password' => $password, 'nickname' => $nickname, 'avatar' => $user_default['avatar'], 'regtime' => date('Y-m-d H:i:s'), 'lastacttime' => date('Y-m-d H:i:s') );
			$userid = $this->user_model->reg_user($data);
			$this->redis_model->set_user($userid);

			// 添加到项目成员表
			$data = array('proid' => $proid, 'userid' => $userid, 'addtime' => date('Y-m-d H:i:s'));
			$res = $this->library_model->add_project_member($data);

			if($res) {

				echo "添加成员成功";die;

			}


		}

		end:

		if($error_msg) {

			echo $error_msg;die;

		} else {

			redirect('/library/project/'.$proid);

		}

	}

	/**
	 * 通过邮箱邀请
	 */
	public function project_member_add2() {

		$error_msg = "";

		if($this->input->post('frames') == 'yes') {

			$proid = $this->input->post('proid', true);

			$this->form_validation->set_rules('email', '邮箱', 'trim|required');

			if ($this->form_validation->run() === false) {

				$error_msg = validation_errors();
				goto end;

			}

			$email = $this->input->post('email', true);

			$proiden = $this->library_model->encode($proid);
			$invite_url = $this->config->item('base_url')."/login/invite?proid={$proiden}";
			$msg = "【瓴赞网】您的邀请地址是{$invite_url}，请于30分钟内正确输入。";

			$this->load->library('email');
			$this->load->config('email');
			$this->email->initialize($this->config->item('email'));

			$this->email->from('hw19860611@163.com', '瓴赞网');
			$this->email->to($email);

			$this->email->subject('瓴赞网项目邀请');
			$this->email->message($msg);

			$result = $this->email->send();

		}

		end:

		if($error_msg) {

			echo $error_msg;die;

		} else {

			echo "发送成功！";die;

		}

	}

	/**
	 * 添加项目到我的采集
	 */
	public function project_product_add() {

//		$proid = (int)$this->uri->segment(3) ? $this->uri->segment(3) : redirect('/home');
//		$type = (int)$this->uri->segment(4) ? $this->uri->segment(4) : redirect('/home');
//
//		if($type == 1) {
//
//			$library = $this->library_model->get_library_list($this->user->userid);
//			$count = count($library);
//
//			$this->assign('library', $library);
//			$this->assign('count', $count);
//			$this->assign('proid', $proid);
//			$this->display('library/library.project_product_add.1.html');
//
//		} elseif($type == 2) {
//
//			$libid = (int)$this->uri->segment(5) ? $this->uri->segment(5) : redirect('/home');
//
//			$library = $this->library_model->get_product_list($libid);
//
//		}

		$proid = (int)$this->uri->segment(3) ? $this->uri->segment(3) : redirect('/home');
		$proid2 = (int)$this->uri->segment(4) ? $this->uri->segment(4) : 0;

		if($proid2) {

			// 获取产品编号
			$ppcode1 = $this->library_model->get_project_code($proid);
			$ppcode = $this->library_model->get_project_product_code($proid);
			$ppcode2 = substr($ppcode, 4, 3);
			$ppcode2 = str_pad($ppcode2 + 1, 3, "0", STR_PAD_LEFT);
			$ppcode = $ppcode1.$ppcode2;

			// 加入产品清单
			$data = array('fid' => 0, 'proid' => $proid, 'proid2' => $proid2, 'ppcode' => $ppcode, 'count' => 1, 'status' => 0, 'addtime' => date('Y-m-d H:i:s'));
			$this->library_model->add_project_product($data);

			redirect('/library/project/'.$proid);

		}

		// 项目详情
		$project = $this->library_model->get_project($proid);

		$product = $this->library_model->get_product_list($this->user->userid);

		$this->assign('project', $project);
		$this->assign('product', $product);
		$this->assign('proid', $proid);
		$this->display('library/library.project_product_add.html');

	}

	/**
	 * 添加项目
	 */
	public function project_product_add1() {

		$proid = (int)$this->uri->segment(3) ? $this->uri->segment(3) : redirect('/home');
		$proid2 = (int)$this->uri->segment(4) ? $this->uri->segment(4) : 0;

		if($proid2) {

			// 获取产品编号
			$ppcode1 = $this->library_model->get_project_code($proid);
			$ppcode = $this->library_model->get_project_product_code($proid);
			$ppcode2 = substr($ppcode, 4, 3);
			$ppcode2 = str_pad($ppcode2 + 1, 3, "0", STR_PAD_LEFT);
			$ppcode = $ppcode1.$ppcode2;

			// 加入产品清单
			$data = array('fid' => 0, 'proid' => $proid, 'proid2' => $proid2, 'ppcode' => $ppcode, 'count' => 1, 'status' => 0, 'addtime' => date('Y-m-d H:i:s'));
			$this->library_model->add_project_product($data);

			redirect('/library/project/'.$proid);

		}

		// 项目详情
		$project = $this->library_model->get_project($proid);

		$product = $this->library_model->get_product_list($this->user->userid);

		$this->assign('project', $project);
		$this->assign('product', $product);
		$this->assign('proid', $proid);
		$this->display('library/library.project_product_add.html');

	}

	public function project_product_add2() {

		$proid = (int)$this->uri->segment(3) ? $this->uri->segment(3) : redirect('/home');
		$sid = (int)$this->uri->segment(4) ? $this->uri->segment(4) : redirect('/home');
		$tyid = (int)$this->uri->segment(5) ? $this->uri->segment(5) : redirect('/home');
		$proid2 = (int)$this->uri->segment(6) ? $this->uri->segment(6) : 0;

		if($proid2) {

			// 获取产品编号
			if($tyid == 1) {

				$ppcode = $this->library_model->get_project_product_code($proid);

			} else {

				$ppcode = $this->library_model->get_project_product_code($proid);
				$ppcode1 = substr($ppcode, 0, 4);
				$ppcode2 = substr($ppcode, 4, 3);

				$ppcode = $this->library_model->get_project_product_code2($sid);
				$ppcode3 = substr($ppcode, 7, 2);
				$ppcode3 = str_pad($ppcode3 + 1, 2, "0", STR_PAD_LEFT);
				$ppcode = $ppcode1.$ppcode2.$ppcode3;

			}

			$data = array('fid' => $sid, 'tyid' => $tyid, 'proid' => $proid, 'proid2' => $proid2, 'ppcode' => $ppcode, 'count' => 1, 'status' => 0, 'addtime' => date('Y-m-d H:i:s'));
			$this->library_model->add_project_product($data);

			redirect('/library/project/'.$proid);

		}

		// 项目详情
		$project = $this->library_model->get_project($proid);

		$product = $this->library_model->get_product_list($this->user->userid);

		$this->assign('project', $project);
		$this->assign('product', $product);
		$this->assign('proid', $proid);
		$this->assign('sid', $sid);
		$this->assign('tyid', $tyid);
		$this->display('library/library.project_product_add2.html');

	}

	/**
	 * 上传项目文档
	 */
	public function uploadDoc() {

		$error_msg = "";

		if($this->input->post('frames') == 'yes') {

			$proid = $this->input->post('proid', true);

			$dir = 'static/upload/temp/'.date('Ymd').'/';
			if(!is_dir($dir)) mkdir($dir, 0777, true);

			$config['upload_path'] = $dir;
			$config['encrypt_name'] = TRUE;
			$config['allowed_types'] = 'jpg|gif|doc|docx|ppt|pptx|xls|xlsx';
			$this->load->library('upload', $config);

			if(!$this->upload->do_upload('pic')) {

				// 上传失败
				$error_msg = $this->upload->display_errors();
				goto end;

			} else {

				// 上传成功 && 上传OSS
				$pic = $this->upload->data();
				$this->load->library('CI_OSS');
				$bucket = 'lingzan';
				//$object = 'picture/'.$pic['file_name'];
				$object = 'picture/'.date('Ymd').'/'.md5(uniqid(rand())).$pic['file_ext'];
				$file = $pic['full_path'];
				$res = $this->ci_oss->uploadFile($bucket, $object, $file);

				// 入库
				$data = array(
					'proid' => $proid,
					'userid' => $this->user->userid,
					'docname' => $pic['client_name'],
					'docpath' => $res['oss-request-url'],
					'docsize' => (float)($res['info']['size_upload']/1024/1024),
					'addtime' => date('Y-m-d H:i:s')
				);
				$id = $this->library_model->upload_doc($data);

			}

			redirect('/library/project/'.$proid);

		}

		end:
		echo $error_msg;die;

	}

	/**
	 * 上传项目封面
	 */
	public function uploadCover() {

		$error_msg = "";

		if($this->input->post('frames') == 'yes') {

			$proid = $this->input->post('proid', true);

			$dir = 'static/upload/temp/'.date('Ymd').'/';
			if(!is_dir($dir)) mkdir($dir, 0777, true);

			// 上传图片
			$config['upload_path'] = $dir;
			$config['encrypt_name'] = TRUE;
			$config['allowed_types'] = 'jpg|gif|doc|docx|ppt|pptx|xls|xlsx';
			$this->load->library('upload', $config);

			// 生成缩略图
			$config2['image_library'] = 'gd2';
			$config2['create_thumb'] = TRUE;
			$config2['maintain_ratio'] = TRUE;
			$config2['width'] = 50;
			$config2['height'] = 50;
			$this->load->library('image_lib', $config2);

			foreach ($_FILES as $key => $value) {

				if (!empty($value['name'])) {

					if (!$this->upload->do_upload($key)) {

						// 上传失败
						$error_msg = $this->upload->display_errors();
						goto end;

					} else {

						// 上传成功
						$pic = $this->upload->data();

						// 生成缩略图
						$config2['source_image'] = $pic['full_path'];
						$this->image_lib->initialize($config2);
						$this->image_lib->resize();

						// 上传OSS
						$this->load->library('CI_OSS');
						$bucket = 'lingzan';
						$file_name = md5(uniqid(rand()));
						$object = 'picture/'.date('Ymd').'/'.$file_name.$pic['file_ext'];
						$file = $pic['full_path'];
						$res = $this->ci_oss->uploadFile($bucket, $object, $file);
						$pic_url[] = $res['oss-request-url'];

						$file_name2 = str_replace($pic['raw_name'], $pic['raw_name'].'_thumb', $pic['full_path']);
						$object = 'picture/'.date('Ymd').'/'.$file_name.'_thumb'.$pic['file_ext'];
						$file = $file_name2;
						$res = $this->ci_oss->uploadFile($bucket, $object, $file);
						$pic_url2[] = $res['oss-request-url'];

					}

				}

			}

			// 项目信息
			$project = $this->library_model->get_project($proid);
			$cover = explode(',', $project['cover']);
			$cover = empty($cover[0]) ? $pic_url : array_merge($cover, $pic_url);
			$cover = implode(',', $cover);
			$data = array('cover' => $cover);
			$this->library_model->upload_cover($proid, $data);
			$this->redis_model->set_project($proid);

			redirect('/library/project/'.$proid);

		}

		end:
		echo $error_msg;die;

	}

	/**
	 * 导出项目
	 */
	public function export() {

		$proid = (int)$this->uri->segment(3) ? $this->uri->segment(3) : redirect('/home');

		// 项目详情
		$project = $this->library_model->get_project($proid);

		// 产品清单
		$prolist = $this->library_model->get_prolist($proid);

		// 加载PHPExcel的类
		$this->load->library('PHPExcel');
		$this->load->library('PHPExcel/IOFactory');

		// 创建PHPExcel实例
		$excel = new PHPExcel();

		// 合并单元格
		$excel->getActiveSheet()->mergeCells('A1:J1');

		// 加粗居中
		$excel->getActiveSheet()->getStyle('A1')->applyFromArray( array( 'font' => array ( 'bold' => true ), 'alignment' => array( 'horizontal' => PHPExcel_Style_Alignment::HORIZONTAL_CENTER ) ) );

		// 设置单元格样式（水平/垂直居中）
		$excel->getActiveSheet()->getStyle('A:J')->getAlignment()->setHorizontal(PHPExcel_Style_Alignment::HORIZONTAL_CENTER);
		$excel->getActiveSheet()->getStyle('A:J')->getAlignment()->setVertical(PHPExcel_Style_Alignment::VERTICAL_CENTER);

		// 为单元格赋值
		$excel->getActiveSheet()->setCellValue('A1', $project['libname']);
		$excel->getActiveSheet()->setCellValue('A2', '编号');
		$excel->getActiveSheet()->setCellValue('B2', '区域');
		$excel->getActiveSheet()->setCellValue('C2', '产品');
		$excel->getActiveSheet()->setCellValue('D2', '图片');
		$excel->getActiveSheet()->setCellValue('E2', '尺寸');
		$excel->getActiveSheet()->setCellValue('F2', '数量');
		$excel->getActiveSheet()->setCellValue('G2', '单位');
		$excel->getActiveSheet()->setCellValue('H2', '单价');
		$excel->getActiveSheet()->setCellValue('I2', '金额');
		$excel->getActiveSheet()->setCellValue('J2', '备注');

		// 行高
		$excel->getActiveSheet()->getRowDimension(1)->setRowHeight(30);

		// 列宽
		$excel->getActiveSheet()->getColumnDimension('A')->setWidth(12);
		$excel->getActiveSheet()->getColumnDimension('B')->setWidth(20);
		$excel->getActiveSheet()->getColumnDimension('C')->setWidth(20);
		$excel->getActiveSheet()->getColumnDimension('D')->setWidth(20);
		$excel->getActiveSheet()->getColumnDimension('E')->setWidth(12);
		$excel->getActiveSheet()->getColumnDimension('F')->setWidth(12);
		$excel->getActiveSheet()->getColumnDimension('G')->setWidth(12);
		$excel->getActiveSheet()->getColumnDimension('H')->setWidth(12);
		$excel->getActiveSheet()->getColumnDimension('I')->setWidth(12);
		$excel->getActiveSheet()->getColumnDimension('J')->setWidth(12);

		foreach ($prolist as $key => $value) {

			$i = $key;
			$key += 3;
			$excel->getActiveSheet()->setCellValue('A'.$key, $value['sp1']['sid']);
			$excel->getActiveSheet()->setCellValue('B'.$key, $project['proname']);
			$excel->getActiveSheet()->setCellValue('C'.$key, $value['sp1']['proname']);

			$img = $value['sp1']['smallpic'];
			if($img != '') {

				$img = imagecreatefromjpeg($img);
				$width = imagesx($img);
				$height = imagesy($img);
				$objDrawing = new PHPExcel_Worksheet_MemoryDrawing();
				$objDrawing->setCoordinates('D'.$key);
				$objDrawing->setImageResource($img);
				$objDrawing->setRenderingFunction(\PHPExcel_Worksheet_MemoryDrawing::RENDERING_DEFAULT);//渲染方法
				$objDrawing->setMimeType(\PHPExcel_Worksheet_MemoryDrawing::MIMETYPE_DEFAULT);
				$objDrawing->setWidth(120);
				$objDrawing->setHeight(120);
				$objDrawing->setWorksheet($excel->getActiveSheet());//同上

			}

			$excel->getActiveSheet()->setCellValue('E'.$key, '');
			$excel->getActiveSheet()->setCellValue('F'.$key, $value['sp1']['count']);
			$excel->getActiveSheet()->setCellValue('G'.$key, '件');
			$excel->getActiveSheet()->setCellValue('H'.$key, $value['sp1']['price']);
			$excel->getActiveSheet()->setCellValue('I'.$key, $value['sp1']['count'] * $value['sp1']['price']);
			$excel->getActiveSheet()->setCellValue('J'.$key, '');

			// 行高
			$excel->getActiveSheet()->getRowDimension($key)->setRowHeight(100);

		}

		$fileName = '报价表';
		$date = date("Y-m-d",time());
		$fileName .= "_{$date}.xls";
		$fileName = iconv("utf-8", "gb2312", $fileName);
		$excel->setActiveSheetIndex(0);
		header('Content-Type: application/vnd.ms-excel');
		header("Content-Disposition: attachment;filename=\"$fileName\"");
		header('Cache-Control: max-age=0');
		$write = new PHPExcel_Writer_Excel2007($excel);
		$write->save('php://output');

	}

	//获取个人的材思库与分项目列表
	public function getLibraryList() {

		$userid = $this->user->userid;
		$library = $this->library_model->getLibraryData($userid);
		$projectId = get_cookie('projectId');
		echo json_encode(array('code'=>200,'library'=>$library,'projectId'=>$projectId));

	}

	//转换别人的项目成我的项目
	public function changeMyProject() {

		$proid = (int) $this->input->post('proid');
		$libid = (int) $this->input->post('libid');

		if(empty($libid)) {
			echo json_encode(array('code'=>2001,'msg'=>'<p>请选择项目</p>'));
			return;
		}
		if(empty($proid)) {
			echo json_encode(array('code'=>2001,'msg'=>'<p>参数错误</p>'));
			return;
		}

		//判断自己是否有足够的积分转采
		$userid = $this->user->userid; 
		$redis_key = "userid_".$userid;
		$field = array('point');
		$myUserInfo = $this->library_model->getRedisData(5, $redis_key, 'lz_user', $userid, $field);

		//查询该项目所属的用户类型,获取这个项目相关的信息
		$redis_key = "proid_".$proid;
		$field = array('proid','oproid','userid','type1','type2','cover','libid','area','proname','desc','tag');
		$project = $this->library_model->getRedisData(8, $redis_key, 'set_project', $proid, $field);
		$userid = $project['userid']; 
		$redis_key = "userid_".$userid;
		$field = array('groupid');
		$userInfo = $this->library_model->getRedisData(5, $redis_key, 'lz_user', $userid, $field);

		if($userInfo['groupid'] == 0 && $myUserInfo['point'] < 250) {
			echo json_encode(array('code'=>2002,'msg'=>'<p>您的积分不足</p>'));
			return;
		}

		if(($userInfo['groupid'] == 10 || $userInfo['groupid'] == 20) && $myUserInfo['point'] < 500) {
			echo json_encode(array('code'=>2002,'msg'=>'<p>您的积分不足</p>'));
			return;
		}

		

		//转化为我的材思库下的项目
		$this->db->trans_begin();
		$data = array(
			'oproid'=>$proid,
			'userid'=>$this->user->userid,
			'libid'=>$libid,
			'proname'=>$project['proname'],
			'tag'=>$project['tag'],
			'cover'=>$project['cover'],
			'type1'=>$project['type1'],
			'type2'=>$project['type2'],
			'desc'=>$project['desc'],
			'commentcount'=>0,
			'status'=>0,
			'isshow'=>0,
			'isdel'=>0,
			'addtime'=>date('Y-m-d H:i:s')
		);

		$newProid = $this->library_model->insertData('lz_project', $data);
		if(empty($newProid)) {
			echo json_encode(array('code'=>2003,'msg'=>'<p>转换失败</p>'));
			return;
		}

		//我的材思库的项目数加1
		$where = array('libid'=>$libid);
		$row = $this->library_model->field_change('lz_library',array( 'procount2'=>'+ 1'), $where);
		if (empty($row)) {

			$this->db->trans_rollback();
			echo json_encode(array('code'=>2004,'msg'=>'<p>转换失败</p>'));
			return false;

		}

		//成员入库
		$data = array(
			'proid'=>$newProid,
			'userid'=>$this->user->userid,
			'groupid'=>10,
			'permissions'=>'1,1,1,1,1',
			'addtime'=>date('Y-m-d H:i:s')
		);
		$newId = $this->library_model->insertData('lz_project_member', $data);
		if(empty($newId)) {
			$this->db->trans_rollback();
			echo json_encode(array('code'=>2005,'msg'=>'<p>转换失败</p>'));
			return;
		}

		//产品入库
		$where = array('proid' => $proid, 'fid'=>0, 'isdel' => 0);
		$res = $this->library_model->getData('lz_project_product','proid2',$where,'sid ASC');				
		$productCount = 0;
		foreach ($res as $k => $v) {

			$proid1 = $v['proid2'];
			$where = array('proid'=>$proid1);
			$product = $this->library_model->getOneData('lz_product', '*', $where);

			//入库lz_product
			$data1 = $product;
			unset($data1['proid']);
			$data1['oproid'] = $proid1;
			$data1['userid'] = $this->user->userid;
			$data1['libid'] = $libid;
			$data1['commentcount'] = 0;
			$data1['zancount'] = 0;
			$data1['isdel'] = 0;
			$data1['addtime'] = date('Y-m-d H:i:s');
			$data1['updatetime'] = date('Y-m-d H:i:s');

			$newProid1 = $this->library_model->insertData('lz_product', $data1);
			if(empty($newProid1)) {
				$this->db->trans_rollback();
				echo json_encode(array('code'=>2006,'msg'=>'<p>转换失败</p>'));
				return;
			}

			//入库lz_project_product
			$data2= array(
				'fid'=>0,
				'proid'=>$newProid,
				'proid2'=>$newProid1,
				'count'=>0,
				'status'=>0,
				'isdel'=>0,
				'addtime'=>date('Y-m-d H:i:s')
			);

			$sid = $this->library_model->insertData('lz_project_product', $data2);
			if(empty($sid)) {
				$this->db->trans_rollback();
				echo json_encode(array('code'=>2007,'msg'=>'<p>转换失败</p>'));
				return;
			}

			$productCount = count($res);

		}

		//扣除积分,产品数增加$productCount
		$where = array('userid'=>$this->user->userid);
		$point = -250;
		if($userInfo['groupid'] == 10 || $userInfo['groupid'] == 20){
			$point = -500;
		}
		$row = $this->library_model->field_change('lz_user',array('point'=>$point,'productcount'=>' + '.$productCount), $where);
		if (empty($row)) {

			$this->db->trans_rollback();
			echo json_encode(array('code'=>2008,'msg'=>'<p>转换失败</p>'));
			return false;

		}

		//添加通知
		$data = array(
			'userid'=>$project['userid'],
			'action'=>1,
			'action_detail'=>12,
			'action_userid'=>$this->user->userid,
			'action_stype'=>1,
			'action_sid'=>$proid,
			'isread'=>0,
			'addtime'=>date('Y-m-d H:i:s')
		);
		$msgId = $this->library_model->insertData('lz_msg', $data);
		if(empty($msgId)) {
			$this->db->trans_rollback();
			echo json_encode(array('code'=>2008,'msg'=>'<p>转换失败</p>'));
			return;
		}

		//添加积分明细记录
		$data = array('userid'=>$this->user->userid, 'action'=>'转采项目', 'point'=>$point, 'addtime'=>date('Y-m-d H:i:s'));
		$pointLogId = $this->library_model->insertData('lz_point_log', $data);
		if(empty($pointLogId)) {
			$this->db->trans_rollback();
			echo json_encode(array('code'=>2009,'msg'=>'<p>转换失败</p>'));
			return false;

		}

		$this->db->trans_commit();

		//修改缓存
		$row = $this->redis_model->set_user($this->user->userid);;
		if(empty($row)) {

			echo json_encode(array('code'=>2010,'msg'=>'<p>操作redis失败,请联系管理员</p>'));
			return;

		}

		//修改缓存
		$row = $this->redis_model->set_library($libid);
		if(empty($row)) {

			echo json_encode(array('code'=>2011,'msg'=>'<p>操作redis失败,请联系管理员</p>'));
			return;

		}

		echo json_encode(array('code'=>200,'msg'=>'转换成功'));

	}

}