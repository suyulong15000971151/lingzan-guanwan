<?php
defined('BASEPATH') OR exit('No direct script access allowed');

class Collection_model extends MY_Model {

	public function __construct() {

		parent::__construct();

	}

	public function get_recommend($key, $p) {

		$p = $p * 20;

		if(empty($key)) {

			$table = 'lz_product';
			$select = 'proid, userid, proname, desc, smallpic, zancount';
			$where = array('oproid' => 0, 'isdel'=>0);
			$order = 'RAND()';

			$product = $this->select_data($table, $select, $where, $order, $p, 20);

		}else{

			$sql = "SELECT `proid`, `userid`, `proname`, `desc`, `smallpic`, `zancount` FROM lz_product WHERE oproid=0 AND isdel=0 AND proname LIKE '%{$key}%' OR tag LIKE '%{$key}%' ORDER BY RAND() LIMIT {$p}, 20";
			$query = $this->db->query($sql);
			$product = $query->result_array();
			// echo $this->db->last_query();

		}

		$list = array();
		foreach ($product as $key => $value) {

			$list[$key]['id'] = $value['proid'];
			$list[$key]['userid'] = $value['userid'];
			$list[$key]['name'] = $value['proname'];
			$list[$key]['desc'] = $value['desc'];
			$list[$key]['pic'] = $value['smallpic'];
			$list[$key]['zancount'] = $value['zancount'];
			$list[$key]['flag'] = 1;

			$list[$key] = array_merge($list[$key], $this->get_simple_user($value['userid']));

		}

		return $list;

	}

	public function get_product($proid) {

		$redis_key = 'proid_'.$proid;
		$field = array('proid', 'userid', 'libid', 'proname', 'smallpic', 'bigpic', 'type1', 'type2', 'color', 'material', 'size', 'model', 'link', 'price', 'desc', 'commentcount', 'zancount');
		$product = $this->getRedis(7, $redis_key, 'set_product', $proid, $field);

		$product = array_merge($product, $this->get_simple_user($product['userid']));

		return $product;

	}

	public function get_type_product($type2) {

		$table = 'lz_product';
		$select = 'proid, smallpic';
		$where = array('type2' => $type2,'isdel'=>0);
		$order = 'RAND()';

		$product = $this->select_data($table, $select, $where, $order, 0, 10);

		return $product;

	}

	public function add_look_history($arr) {

		$table = 'lz_look_history';

		if(!$this->update_data($table, $arr, array('looktime' => date('Y-m-d H:i:s')))) {

			$arr['looktime'] = date('Y-m-d H:i:s');

			return $this->insert_data('lz_look_history', $arr);

		}

		return TRUE;

	}

	public function get_look_history($userid) {

		$table = 'lz_look_history';
		$select = 'sourceid';
		$where = array('userid' => $userid, 'sourcetype' => 1);
		$order = 'looktime DESC';

		$sourceids = $this->select_data($table, $select, $where, $order, 0, 8);

		$history = array();
		foreach ($sourceids as $key => $value) {

			$redis_key = 'proid_'.$value['sourceid'];
			$field = array('proid', 'smallpic');
			$history[$key] = $this->getRedis(7, $redis_key, 'set_product', $value['sourceid'], $field);

		}

		return $history;

	}

	public function get_comment($sourcetype, $sourceid) {

		$table = 'lz_comment';
		$select = 'userid, comment, addtime';
		$where = array('sourcetype' => $sourcetype, 'sourceid' => $sourceid);
		$order = 'addtime DESC';

		$comment = $this->select_data($table, $select, $where, $order, 0, 4);

		foreach ($comment as $key => $value) {

			$comment[$key] = array_merge($value, $this->get_simple_user($value['userid']));

		}

		return $comment;

	}

	public function get_nearproid($proid) {

		$table = 'lz_product';
		$select = 'proid';
		$where = array('proid <' => $proid);
		$order = 'proid DESC';

		$proid1 = $this->select_data($table, $select, $where, $order, 0, 1);

		$table = 'lz_product';
		$select = 'proid';
		$where = array('proid >' => $proid);
		$order = '';

		$proid2 = $this->select_data($table, $select, $where, $order, 0, 1);

		$res = array('proid1' => @$proid1[0]['proid'], 'proid2' => @$proid2[0]['proid']);

		return $res;

	}

	//获取数据详情
	public function getData($table, $select = '*', $where) {

		return $this->select_data_row($table, $select, $where);
	}

}